name: build PCIe Debug K-Map docs
# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

permissions: write-all

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@main

    # Set up Python 3
    - name: Set up Python 3.9
      uses: actions/setup-python@main
      with:
        python-version: 3.9

    # Install sphinx and dependencies
    - name: install sphinx and dependencies
      run: |
        python3 -m pip install --upgrade pip
        pip3 install rst2pdf==0.99  rinohtype==0.5.3 recommonmark==0.7.1 sphinx_markdown_tables==0.0.17 sphinx==5.1.1 docutils==0.16 bs4

    # Build
    - name: Build documentation
      run: |
        cd pciedebug; make html



    # Fixup
    - name: Fixup
      run: |
        mkdir deploy
        cp -r site/. deploy/
        cp -r pciedebug deploy/
        
              
    # Deploy
    - name: Push
      uses: s0/git-publish-subdir-action@develop
      env:
        REPO: self
        BRANCH: gh-pages # The branch name where you want to push the assets
        FOLDER: deploy   # The directory where your assets are generated
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # GitHub will automatically add this - you don't need to bother getting a token
        MESSAGE: "Build: ({sha}) {msg}" # The commit message
